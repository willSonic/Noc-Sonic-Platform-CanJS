{
  "name": "logga",
  "version": "1.0.0",
  "description": "A really simple logger with colours and conventional levels.",
  "main": "logga.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha test/*.test.js"
  },
  "repository": "",
  "keywords": [
    "logger"
  ],
  "author": {
    "name": "Ben Gourley"
  },
  "license": "BSD",
  "dependencies": {
    "colors": "~0.6.0-1"
  },
  "devDependencies": {
    "mocha": "~1.8.1"
  },
  "readme": "# logga.js\n\nA really simple, slightly configurable logger. The log levels are fixed, and based\non those of [node-bunyan](https://github.com/trentm/node-bunyan).\n\nYou can configure:\n- level of output\n- output stream\n- colors (Sorry fellow brits, it's the American spelling for consistency)\n\nEverything else is fixed, including output format.\n\n## Install\n\n```\nnpm install logga\n```\n\n## Usage\n\n```js\n\nvar logger = require('logga')()\n\nlogger.trace('Very granular info')\nlogger.debug('A verbose message to be logged')\nlogger.info('Some useful info', 'can take', 'multiple', 'args')\nlogger.warn('Careful now, Mr. Fancy Programmer!')\nlogger.error('Something terrible happened, abort!', error)\nlogger.fatal('The apocalypse is upon us')\n\n// The default log level is 'info', so the 'trace' and 'debug'\n// statements would not log anything in this example.\n\n```\n\n## Options\n\n- `logLevel` – can be one of the following: 'trace', 'debug', 'info', 'warn', 'error' or 'fatal'. Default: `'info'`.\n- `colors` – whether the log output is in color. Default: `true`.\n- `outStream` - the output stream to write to (or an object with a `write()` method). Default: `process.stdout`.\n- `printLevel` - If true, includes the log level in the message, in uppercase. Default: `false`.\n- `hostname` - If true, includes the hostname in the message. Default: `false`.\n\nOptions can be passed upon creation, or set on the fly at an point, eg.:\n\n```js\nvar createLogger = require('logga')\n  , logger = createLogger({ colors: false, logLevel: 'warn' })\n\nlogger.info('Hello!') // Will not output because log level is set to 'warn'\n\nlogger.options.logLevel = 'debug'\n\nlogger.info('World!') // Will now output because log level is now set to 'debug'\n```\n",
  "readmeFilename": "Readme.md",
  "_id": "logga@1.0.0",
  "dist": {
    "shasum": "e78db40d31aa97d3c8c028d02026489bab529b57"
  },
  "_from": "logga@>=0.0.2",
  "_resolved": "https://registry.npmjs.org/logga/-/logga-1.0.0.tgz"
}
